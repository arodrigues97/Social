[{"/Users/adam/Programming/Apps/social/app/src/index.js":"1","/Users/adam/Programming/Apps/social/app/src/components/Navbar.js":"2","/Users/adam/Programming/Apps/social/app/src/login/Login.js":"3","/Users/adam/Programming/Apps/social/app/src/feed/FeedPage.js":"4","/Users/adam/Programming/Apps/social/app/src/register/Register.js":"5","/Users/adam/Programming/Apps/social/app/src/apollo.js":"6","/Users/adam/Programming/Apps/social/app/src/utils/authentication.js":"7","/Users/adam/Programming/Apps/social/app/src/components/App.js":"8","/Users/adam/Programming/Apps/social/app/src/register/registerMutation.js":"9","/Users/adam/Programming/Apps/social/app/src/feed/getFeedQuery.js":"10","/Users/adam/Programming/Apps/social/app/src/components/post/Post.js":"11","/Users/adam/Programming/Apps/social/app/src/components/post/toggleLikeMutation.js":"12","/Users/adam/Programming/Apps/social/app/src/components/comment/addCommentMutation.js":"13","/Users/adam/Programming/Apps/social/app/src/components/comment/getCommentsQuery.js":"14","/Users/adam/Programming/Apps/social/app/src/components/comment/Comments.js":"15","/Users/adam/Programming/Apps/social/app/src/components/comment/Comment.js":"16","/Users/adam/Programming/Apps/social/app/src/components/post/CreatePost.js":"17","/Users/adam/Programming/Apps/social/app/src/components/post/createPostMutation.js":"18","/Users/adam/Programming/Apps/social/app/src/components/ProfileCard.js":"19","/Users/adam/Programming/Apps/social/app/src/feed/getUserQuery.js":"20","/Users/adam/Programming/Apps/social/app/src/profile/ProfilePage.js":"21","/Users/adam/Programming/Apps/social/app/src/components/profile/ProfilePosts.js":"22","/Users/adam/Programming/Apps/social/app/src/components/post/PostList.js":"23","/Users/adam/Programming/Apps/social/app/src/components/profile/getProfilePosts.js":"24","/Users/adam/Programming/Apps/social/app/src/components/comment/AddComment.js":"25","/Users/adam/Programming/Apps/social/app/src/components/comment/getRepliesQuery.js":"26"},{"size":582,"mtime":1615839554539,"results":"27","hashOfConfig":"28"},{"size":3904,"mtime":1615937563485,"results":"29","hashOfConfig":"28"},{"size":3524,"mtime":1615703460016,"results":"30","hashOfConfig":"28"},{"size":3742,"mtime":1616023680024,"results":"31","hashOfConfig":"28"},{"size":5294,"mtime":1615837511550,"results":"32","hashOfConfig":"28"},{"size":915,"mtime":1615845087487,"results":"33","hashOfConfig":"28"},{"size":1946,"mtime":1615700132742,"results":"34","hashOfConfig":"28"},{"size":1195,"mtime":1615939351840,"results":"35","hashOfConfig":"28"},{"size":480,"mtime":1615836578477,"results":"36","hashOfConfig":"28"},{"size":428,"mtime":1616023795245,"results":"37","hashOfConfig":"28"},{"size":3440,"mtime":1616023436522,"results":"38","hashOfConfig":"28"},{"size":476,"mtime":1615843789413,"results":"39","hashOfConfig":"28"},{"size":476,"mtime":1616023443893,"results":"40","hashOfConfig":"28"},{"size":433,"mtime":1616022412667,"results":"41","hashOfConfig":"28"},{"size":708,"mtime":1616020102004,"results":"42","hashOfConfig":"28"},{"size":2989,"mtime":1616022543780,"results":"43","hashOfConfig":"28"},{"size":3451,"mtime":1615943515731,"results":"44","hashOfConfig":"28"},{"size":374,"mtime":1615844660997,"results":"45","hashOfConfig":"28"},{"size":362,"mtime":1615852668275,"results":"46","hashOfConfig":"28"},{"size":161,"mtime":1615938627712,"results":"47","hashOfConfig":"28"},{"size":1507,"mtime":1615944751427,"results":"48","hashOfConfig":"28"},{"size":487,"mtime":1615943659864,"results":"49","hashOfConfig":"28"},{"size":804,"mtime":1616023560778,"results":"50","hashOfConfig":"28"},{"size":388,"mtime":1615940355522,"results":"51","hashOfConfig":"28"},{"size":2481,"mtime":1616022690269,"results":"52","hashOfConfig":"28"},{"size":391,"mtime":1616022532067,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1o1hb8n",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/adam/Programming/Apps/social/app/src/index.js",[],["112","113"],"/Users/adam/Programming/Apps/social/app/src/components/Navbar.js",[],"/Users/adam/Programming/Apps/social/app/src/login/Login.js",[],"/Users/adam/Programming/Apps/social/app/src/feed/FeedPage.js",["114","115","116","117"],"/Users/adam/Programming/Apps/social/app/src/register/Register.js",["118","119"],"import {\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\"\nimport { Alert } from \"@material-ui/lab\"\nimport { useMutation } from \"@apollo/client\"\nimport REGISTER from \"./registerMutation\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n/**\n * The styles to use for the Register page.\n */\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(8),\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\n/**\n * Represents the Register page.\n * @author Adam Rodrigues\n * @returns The Register component.\n */\nconst Register = () => {\n  /**\n   * The mutation hook used to execute a register mutation.\n   */\n  const [register, { loading, error }] = useMutation(REGISTER, {\n    onCompleted({ register }) {\n      if (register) {\n        setHasRegistered(true)\n      }\n    },\n    onError({ error }) {\n      setHasRegistered(false)\n    },\n  })\n\n  /**\n   * The first name reference stored in state.\n   */\n  const [firstName, setFirstName] = useState(\"\")\n\n  /**\n   * The last name reference stored in state.\n   */\n  const [lastName, setLastName] = useState(\"\")\n\n  /**\n   * The email reference stored in state.\n   */\n  const [email, setEmail] = useState(\"\")\n\n  /**\n   * The password reference stored in state.\n   */\n  const [password, setPassword] = useState(\"\")\n\n  /**\n   * The password repeat reference stored in state.\n   */\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\")\n\n  /**\n   *\n   */\n  const [hasRegistered, setHasRegistered] = useState(false)\n\n  /**\n   * The instance of the styles to use for the register page.\n   */\n  const classes = useStyles()\n\n  /**\n   * The reference to history.\n   */\n  const history = useHistory()\n\n  /**\n   * The method used when the register button is clicked.\n   */\n  function handleRegister() {\n    register({\n      variables: {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        passwordRepeat: passwordRepeat,\n      },\n    })\n  }\n\n  return (\n    <Container className={classes.container} maxWidth=\"xs\">\n      <Typography className={classes.title} component=\"h1\" variant=\"h5\">\n        Register\n      </Typography>\n      <form>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  name=\"first-name\"\n                  size=\"small\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  name=\"last-name\"\n                  size=\"small\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  name=\"email\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  name=\"password\"\n                  size=\"small\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Repeat Password\"\n                  name=\"password-repeat\"\n                  size=\"small\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  onChange={(e) => setPasswordRepeat(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              onClick={handleRegister}\n            >\n              Register\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            {hasRegistered ? (\n              <Alert severity=\"success\">\n                You have successfully registered - good job! You can login by\n                clicking <Link to=\"/login\">here</Link>\n              </Alert>\n            ) : (\n              \"\"\n            )}\n            {error ? (\n              <Alert severity=\"error\">\n                {error.graphQLErrors.map(({ message }) => {\n                  return <span>{message}</span>\n                })}\n                {error.networkError\n                  ? \"Sorry, we are uanble to complete the request at this time.\"\n                  : \"\"}\n              </Alert>\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  )\n}\n\nexport default Register\n","/Users/adam/Programming/Apps/social/app/src/apollo.js",[],"/Users/adam/Programming/Apps/social/app/src/utils/authentication.js",[],"/Users/adam/Programming/Apps/social/app/src/components/App.js",["120","121"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport Login from \"../login/Login\"\nimport FeedPage from \"../feed/FeedPage\"\nimport Register from \"../register/Register\"\nimport ProfilePage from \"../profile/ProfilePage\"\nimport { PrivateRoute, PublicRoute } from \"../utils/authentication.js\"\n\n/**\n * Creates the App component.\n * @returns The app component.\n */\nfunction App() {\n  return (\n    <Router>\n      <header>\n        <Navbar />\n      </header>\n      <div className=\"root\">\n        <Switch>\n          <PublicRoute\n            restricted={false}\n            component={<div></div>}\n            path=\"/\"\n            exact\n          />\n          <PublicRoute\n            restricted={true}\n            component={Register}\n            path=\"/register\"\n            exact\n          />\n          <PublicRoute\n            restricted={true}\n            component={Login}\n            path=\"/login\"\n            exact\n          />\n          <PrivateRoute component={FeedPage} path=\"/feed\" exact />\n          <PrivateRoute component={ProfilePage} path=\"/profile\" exact />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","/Users/adam/Programming/Apps/social/app/src/register/registerMutation.js",[],"/Users/adam/Programming/Apps/social/app/src/feed/getFeedQuery.js",[],"/Users/adam/Programming/Apps/social/app/src/components/post/Post.js",[],"/Users/adam/Programming/Apps/social/app/src/components/post/toggleLikeMutation.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/addCommentMutation.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/getCommentsQuery.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/Comments.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/Comment.js",["122","123","124"],"import { useLazyQuery } from \"@apollo/client\"\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  Avatar,\n  CardContent,\n  makeStyles,\n  Box,\n  Button,\n  CardActionArea,\n} from \"@material-ui/core\"\nimport { gql } from \"graphql-tag\"\nimport { useEffect, useState } from \"react\"\nimport AddComment from \"./AddComment\"\nimport GET_REPLIES from \"./getRepliesQuery\"\n\n/**\n * Represents the styling of a Comment.\n */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\n/**\n * Represents a comment under a Post.\n * @param {*} props The props passed.\n * @returns The component Comment.\n */\nconst Comment = (props) => {\n  /**\n   * The instance of the styles to use.\n   */\n  const classes = useStyles()\n\n  /**\n   * The repy toggle.\n   */\n  const [replyToggle, setReplyToggle] = useState(false)\n\n  /**\n   * The query hook used to retrieve the replies.\n   */\n  const [replyComments, { data }] = useLazyQuery(GET_REPLIES)\n\n  /**\n   * Loads the comment replies.\n   */\n  useEffect(() => {\n    replyComments({ variables: { commentId: parseInt(props.id) } })\n  }, [])\n\n  /**\n   * Handles the replies being toggled.\n   */\n  function handleReplyToggle() {\n    setReplyToggle(!replyToggle)\n  }\n\n  /**\n   * The styling to aplly for a reply.\n   */\n  let replyToStyle = {\n    margin: \"2rem\",\n  }\n\n  return (\n    <div className={classes.root}>\n      <Card variant=\"outlined\" style={props.replyTo ? replyToStyle : {}}>\n        <CardHeader\n          title={props.commenter}\n          className={classes.cardHeader}\n          avatar={\n            <Avatar src=\"https://material-ui.com/static/images/avatar/1.jpg\"></Avatar>\n          }\n        ></CardHeader>\n        <CardContent>\n          <Box component=\"span\" fontWeight={500}>\n            {props.commenter}\n          </Box>\n          <p>{props.comment}</p>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={handleReplyToggle}>\n            Reply\n          </Button>\n          <Button size=\"small\">Like ({props.likes})</Button>\n        </CardActions>\n        {replyToggle ? (\n          <AddComment\n            postId={props.postId}\n            replyCommentId={props.id}\n          ></AddComment>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"replies\">\n          {data && data.getReplies\n            ? data.getReplies.map((reply) => {\n                return (\n                  <div>\n                    <Comment\n                      id={reply.id}\n                      postId={reply.post.id}\n                      commenter={\n                        reply.user.firstName + \" \" + reply.user.lastName\n                      }\n                      comment={reply.comment}\n                      likes={reply.likesCount}\n                      replyTo={true}\n                      replies={reply.replies}\n                    ></Comment>\n                  </div>\n                )\n              })\n            : \"\"}\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Comment\n","/Users/adam/Programming/Apps/social/app/src/components/post/CreatePost.js",["125"],"import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  TextField,\n  Avatar,\n  CardHeader,\n  makeStyles,\n} from \"@material-ui/core\"\nimport { useState } from \"react\"\nimport { gql, useMutation } from \"@apollo/client\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport GET_FEED from \"../../feed/getFeedQuery.js\"\nimport CREATE_POST from \"./createPostMutation.js\"\nimport GET_PROFILE_POSTS from \"../profile/getProfilePosts.js\"\n\n/**\n * Represents the styling of the Create Post component.\n */\nconst useStyles = makeStyles((theme) => ({\n  cardContent: {\n    margin: 0,\n  },\n  cardHeader: {\n    padding: theme.spacing(2),\n  },\n}))\n\n/**\n * The component of creating a post. Handles the execution of the mutation against the graphql server.\n * @author Adam Rodrigues\n * @returns The component of creating a post.\n */\nconst CreatePost = (props) => {\n  /**\n   * The classes to style with.\n   */\n  const classes = useStyles()\n\n  /**\n   * The create post use mutation hook.\n   */\n  const [createPost, { error }] = useMutation(CREATE_POST, {\n    refetchQueries: [\n      { query: GET_FEED, variables: { offset: 0 } },\n      { query: GET_PROFILE_POSTS, variables: { offset: 0 } },\n    ],\n    onError({ error }) {},\n    update(cache, { data: { createPost } }) {\n      cache.modify({\n        id: cache.identify(\"Post:\" + createPost.id),\n        fields: {\n          post(exisistingPost = [], { readField }) {\n            const newPostRef = cache.writeFragment({\n              data: createPost,\n              fragment: gql`\n                fragment NewPost on Post {\n                  id\n                  post\n                  user {\n                    id\n                    firstName\n                    lastName\n                  }\n                }\n              `,\n            })\n            return [...exisistingPost, newPostRef]\n          },\n        },\n      })\n    },\n  })\n\n  /**\n   * The typed post value in state.\n   */\n  const [post, setPost] = useState(\"\")\n\n  /**\n   * The interaction when creating a post.\n   */\n  function handlePost() {\n    createPost({\n      variables: { post: post },\n    })\n    setPost(\"\")\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardHeader\n          title={props.user.firstName + \" \" + props.user.lastName}\n          className={classes.cardHeader}\n          avatar={\n            <Avatar src=\"https://avatars.githubusercontent.com/u/36482887?s=460&u=4babd11bd036d847b91f98c500e652c2ce55e329&v=4\"></Avatar>\n          }\n        ></CardHeader>\n        <CardContent className={classes.cardContent}>\n          <TextField\n            multiline\n            rows={2}\n            rowsMax={12}\n            fullWidth\n            helperText={\"What's on your mind?\"}\n            value={post}\n            onChange={(e) => setPost(e.target.value)}\n          />\n        </CardContent>\n        <CardActions>\n          <Button variant=\"contained\" color=\"primary\" onClick={handlePost}>\n            Post\n          </Button>\n          {error ? (\n            <Alert severity=\"error\">\n              {error.graphQLErrors.map(({ message }) => {\n                return <span>{message}</span>\n              })}\n              {error.networkError\n                ? \"Sorry, we are having some issues contacting the network.\"\n                : console.log(JSON.stringify(error.networkError))}\n            </Alert>\n          ) : (\n            \"\"\n          )}\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default CreatePost\n","/Users/adam/Programming/Apps/social/app/src/components/post/createPostMutation.js",[],"/Users/adam/Programming/Apps/social/app/src/components/ProfileCard.js",[],["126","127"],"/Users/adam/Programming/Apps/social/app/src/feed/getUserQuery.js",[],"/Users/adam/Programming/Apps/social/app/src/profile/ProfilePage.js",[],"/Users/adam/Programming/Apps/social/app/src/components/profile/ProfilePosts.js",[],"/Users/adam/Programming/Apps/social/app/src/components/post/PostList.js",[],"/Users/adam/Programming/Apps/social/app/src/components/profile/getProfilePosts.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/AddComment.js",[],"/Users/adam/Programming/Apps/social/app/src/components/comment/getRepliesQuery.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":18,"nodeType":"134","messageId":"135","endLine":1,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"137","line":42,"column":21,"nodeType":"134","messageId":"135","endLine":42,"endColumn":28},{"ruleId":"132","severity":1,"message":"138","line":53,"column":20,"nodeType":"134","messageId":"135","endLine":53,"endColumn":35},{"ruleId":"132","severity":1,"message":"137","line":37,"column":22,"nodeType":"134","messageId":"135","endLine":37,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":86,"column":9,"nodeType":"134","messageId":"135","endLine":86,"endColumn":16},{"ruleId":"132","severity":1,"message":"140","line":1,"column":43,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"141","line":1,"column":50,"nodeType":"134","messageId":"135","endLine":1,"endColumn":54},{"ruleId":"132","severity":1,"message":"142","line":11,"column":3,"nodeType":"134","messageId":"135","endLine":11,"endColumn":17},{"ruleId":"132","severity":1,"message":"143","line":13,"column":10,"nodeType":"134","messageId":"135","endLine":13,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":53,"column":6,"nodeType":"146","endLine":53,"endColumn":8,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"142","line":4,"column":3,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Post' is defined but never used.","'loading' is assigned a value but never used.","'loadingUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'CardActionArea' is defined but never used.","'gql' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.id' and 'replyComments'. Either include them or remove the dependency array.","ArrayExpression",["152"],["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [props.id, replyComments]",{"range":"155","text":"156"},[1082,1084],"[props.id, replyComments]"]