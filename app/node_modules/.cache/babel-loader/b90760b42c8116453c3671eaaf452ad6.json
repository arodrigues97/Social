{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Programming/Apps/social/app/src/feed/FeedPage.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Container, makeStyles, CardContent, Typography, Portal } from \"@material-ui/core\";\nimport Post from \"../components/Post\";\nimport CreatePost from \"./CreatePost\";\nimport { gql, useQuery } from \"@apollo/client\";\n/**\n * Represents the query to fetch for the feed.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_FEED_QUERY = gql`\n  query {\n    getFeed {\n      id\n      post\n      user {\n        id\n        firstName\n        lastName\n      }\n      likes {\n        id\n        user {\n          id\n        }\n      }\n      likesCount\n    }\n  }\n`;\n/**\n * Creates the styling of the feed page.\n */\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(4)\n  }\n}));\n/**\n * Creates the feed page component and handles the executing of the feed query.\n * @returns The feed page component.\n */\n\nconst FeedPage = () => {\n  _s();\n\n  /**\n   * The instance of the styling to use.\n   */\n  const classes = useStyles();\n  /**\n   * The query hook to fetch the feed.\n   * Temporarily using polling intervals to further investigate why the UI is not updating upon cache updating.\n   */\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_FEED_QUERY, {\n    errorPolicy: \"all\",\n    pollInterval: 100,\n    fetchPolicy: \"cache-and-network\"\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this) : \"\", error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: JSON.stringify(error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this) : \"\", data ? data.getFeed.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        id: post.id,\n        poster: post.user.firstName + \" \" + post.user.lastName,\n        post: post.post,\n        likes: post.likesCount,\n        postLiked: isPostLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this);\n    }) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedPage, \"26nYKI3WVf6TVSM2tCgXi3Dps08=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = FeedPage;\nexport default FeedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"sources":["/Users/adam/Programming/Apps/social/app/src/feed/FeedPage.js"],"names":["Card","Container","makeStyles","CardContent","Typography","Portal","Post","CreatePost","gql","useQuery","GET_FEED_QUERY","useStyles","theme","container","marginTop","spacing","FeedPage","classes","loading","error","data","errorPolicy","pollInterval","fetchPolicy","JSON","stringify","getFeed","map","post","index","id","user","firstName","lastName","likesCount","isPostLiked"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,MANF,QAOO,mBAPP;AAQA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAGF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBO;AAqBP;AACA;AACA;;AACA,MAAMG,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAD4B,CAAZ,CAAD,CAA5B;AAMA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACF;AACA;AACE,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA;AACF;AACA;AACA;;AACE,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACC,cAAD,EAAiB;AACxDW,IAAAA,WAAW,EAAE,KAD2C;AAExDC,IAAAA,YAAY,EAAE,GAF0C;AAGxDC,IAAAA,WAAW,EAAE;AAH2C,GAAjB,CAAzC;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEN,OAAO,CAACJ,SAA9B;AAAyC,IAAA,QAAQ,EAAC,IAAlD;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsD,EAFhE,EAGGC,KAAK,gBAAG;AAAA,gBAAOK,IAAI,CAACC,SAAL,CAAeN,KAAf;AAAP;AAAA;AAAA;AAAA;AAAA,YAAH,GAA0C,EAHlD,EAIGC,IAAI,GACDA,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,0BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,MAAM,EAAEF,IAAI,CAACG,IAAL,CAAUC,SAAV,GAAsB,GAAtB,GAA4BJ,IAAI,CAACG,IAAL,CAAUE,QAFhD;AAGE,QAAA,IAAI,EAAEL,IAAI,CAACA,IAHb;AAIE,QAAA,KAAK,EAAEA,IAAI,CAACM,UAJd;AAKE,QAAA,SAAS,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD,CADC,GAYD,EAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CApCD;;GAAMnB,Q;UAIYL,S,EAMiBF,Q;;;KAV7BO,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import {\n  Card,\n  Container,\n  makeStyles,\n  CardContent,\n  Typography,\n  Portal,\n} from \"@material-ui/core\"\nimport Post from \"../components/Post\"\nimport CreatePost from \"./CreatePost\"\nimport { gql, useQuery } from \"@apollo/client\"\n\n/**\n * Represents the query to fetch for the feed.\n */\nexport const GET_FEED_QUERY = gql`\n  query {\n    getFeed {\n      id\n      post\n      user {\n        id\n        firstName\n        lastName\n      }\n      likes {\n        id\n        user {\n          id\n        }\n      }\n      likesCount\n    }\n  }\n`\n\n/**\n * Creates the styling of the feed page.\n */\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(4),\n  },\n}))\n\n/**\n * Creates the feed page component and handles the executing of the feed query.\n * @returns The feed page component.\n */\nconst FeedPage = () => {\n  /**\n   * The instance of the styling to use.\n   */\n  const classes = useStyles()\n\n  /**\n   * The query hook to fetch the feed.\n   * Temporarily using polling intervals to further investigate why the UI is not updating upon cache updating.\n   */\n  const { loading, error, data } = useQuery(GET_FEED_QUERY, {\n    errorPolicy: \"all\",\n    pollInterval: 100,\n    fetchPolicy: \"cache-and-network\",\n  })\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <CreatePost />\n      {loading ? <Typography variant=\"h6\">Loading...</Typography> : \"\"}\n      {error ? <span>{JSON.stringify(error)}</span> : \"\"}\n      {data\n        ? data.getFeed.map((post, index) => {\n            return (\n              <Post\n                id={post.id}\n                poster={post.user.firstName + \" \" + post.user.lastName}\n                post={post.post}\n                likes={post.likesCount}\n                postLiked={isPostLiked}\n              />\n            )\n          })\n        : \"\"}\n    </Container>\n  )\n}\n\nexport default FeedPage\n"]},"metadata":{},"sourceType":"module"}