{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Programming/Apps/social/app/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActionArea, CardActions, CardContent, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport Comments from \"./Comments\";\nimport { useState } from \"react\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_COMMENT = gql`\n  mutation AddComment($comment: String!, $postId: Int!) {\n    addComment(comment: $comment, postId: $postId) {\n      id\n      comment\n      post {\n        id\n        post\n      }\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  feed: {\n    margin: \"auto\",\n    marginTop: theme.spacing(4)\n  },\n  title: {\n    fontSize: 14,\n    marginTop: theme.spacing(2)\n  },\n  commentArea: {\n    display: \"block\"\n  },\n  postComment: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Post = props => {\n  _s();\n\n  const classes = useStyles();\n  const [commentsToggle, setCommentsToggle] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_COMMENTS, {\n    errorPolicy: \"all\",\n    pollInterval: 0,\n    variables: {\n      comment: \"Comment\",\n      postId: 89\n    }\n  });\n  const [addComment, {\n    addCommentError\n  }] = useMutation(ADD_COMMENT);\n\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n\n  const handleCommentsClick = event => {\n    setCommentsToggle(!commentsToggle);\n  };\n\n  const handleAddComment = event => {\n    addComment({\n      variables: {\n        comment: comment,\n        postId: props.id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.feed,\n    variant: \"outlined\",\n    color: \"primary\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: [\"Posted by: \", props.poster]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h6\",\n        children: props.post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), commentsToggle && data ? /*#__PURE__*/_jsxDEV(Comments, {\n      postId: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleCommentsClick,\n          children: [\"Comments (\", props.comments, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: [\"Likes (\", props.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.commentArea,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Add a comment\",\n          name: \"comment\",\n          size: \"small\",\n          variant: \"outlined\",\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.postComment,\n          onClick: handleAddComment,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"qPtsPQ2TxRMkBvRrcSJ5eJimMG4=\", false, function () {\n  return [useStyles, useQuery, useMutation];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/adam/Programming/Apps/social/app/src/components/Post.js"],"names":["Button","Card","CardActionArea","CardActions","CardContent","makeStyles","TextField","Typography","Comments","useState","gql","useMutation","useQuery","ADD_COMMENT","useStyles","theme","feed","margin","marginTop","spacing","title","fontSize","commentArea","display","postComment","Post","props","classes","commentsToggle","setCommentsToggle","comment","setComment","loading","error","data","GET_COMMENTS","errorPolicy","pollInterval","variables","postId","addComment","addCommentError","handleCommentChange","event","target","value","handleCommentsClick","handleAddComment","id","poster","post","comments","likes"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\"\nimport Comments from \"./Comments\"\nimport { useState } from \"react\"\nimport { gql, useMutation, useQuery } from \"@apollo/client\"\n\nconst ADD_COMMENT = gql`\n  mutation AddComment($comment: String!, $postId: Int!) {\n    addComment(comment: $comment, postId: $postId) {\n      id\n      comment\n      post {\n        id\n        post\n      }\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  feed: {\n    margin: \"auto\",\n    marginTop: theme.spacing(4),\n  },\n  title: {\n    fontSize: 14,\n    marginTop: theme.spacing(2),\n  },\n  commentArea: {\n    display: \"block\",\n  },\n  postComment: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\nconst Post = (props) => {\n  const classes = useStyles()\n  const [commentsToggle, setCommentsToggle] = useState(false)\n  const [comment, setComment] = useState(\"\")\n\n  const { loading, error, data } = useQuery(GET_COMMENTS, {\n    errorPolicy: \"all\",\n    pollInterval: 0,\n    variables: {\n      comment: \"Comment\",\n      postId: 89,\n    },\n  })\n\n  const [addComment, { addCommentError }] = useMutation(ADD_COMMENT)\n\n  const handleCommentChange = (event) => {\n    setComment(event.target.value)\n  }\n\n  const handleCommentsClick = (event) => {\n    setCommentsToggle(!commentsToggle)\n  }\n\n  const handleAddComment = (event) => {\n    addComment({ variables: { comment: comment, postId: props.id } })\n  }\n\n  return (\n    <Card className={classes.feed} variant=\"outlined\" color=\"primary\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Posted by: {props.poster}\n        </Typography>\n        <Typography component=\"h3\" variant=\"h6\">\n          {props.post}\n        </Typography>\n      </CardContent>\n\n      {commentsToggle && data ? <Comments postId={props.id} /> : \"\"}\n      <CardActionArea>\n        <CardActions>\n          <Button size=\"small\" onClick={handleCommentsClick}>\n            Comments ({props.comments})\n          </Button>\n          <Button size=\"small\">Likes ({props.likes})</Button>\n        </CardActions>\n        <CardActions className={classes.commentArea}>\n          <TextField\n            fullWidth\n            label=\"Add a comment\"\n            name=\"comment\"\n            size=\"small\"\n            variant=\"outlined\"\n            onChange={handleCommentChange}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.postComment}\n            onClick={handleAddComment}\n          >\n            Add Comment\n          </Button>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}