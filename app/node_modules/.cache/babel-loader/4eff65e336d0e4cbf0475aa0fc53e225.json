{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Programming/Apps/social/app/src/feed/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActionArea, CardActions, CardContent, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport client from \"../apollo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_POST_MUTATION = gql`\n  mutation CreatePost($post: String!) {\n    createPost(post: $post) {\n      id\n      post\n      user {\n        firstName\n        lastName\n      }\n    }\n  }\n`;\nconst GET_FEED_QUERY = gql`\n  query {\n    getFeed {\n      id\n      post\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n\nconst CreatePost = () => {\n  _s();\n\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    onCompleted({\n      createPost\n    }) {\n      client.writeQuery({\n        id: createPost.id,\n        post: createPost.id,\n        user: {\n          firstName: createPost.user.firstName,\n          lastName: createPost.user.lastName\n        }\n      });\n    },\n\n    onError({\n      error\n    }) {}\n\n  });\n  const [post, setPost] = useState(\"\");\n\n  function handlePost() {\n    createPost({\n      variables: {\n        post: post\n      },\n      update: (cache, {\n        data: {\n          createPost\n        }\n      }) => {\n        const data = cache.readQuery({\n          query: GET_FEED_QUERY\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          rows: 2,\n          rowsMax: 12,\n          fullWidth: true,\n          helperText: \"What's on your mind?\",\n          onChange: e => setPost(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handlePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"tXLyLznOGovAXY2N8cwzS9PzcDo=\", false, function () {\n  return [useMutation];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/adam/Programming/Apps/social/app/src/feed/CreatePost.js"],"names":["Button","Card","CardActionArea","CardActions","CardContent","TextField","useState","gql","useMutation","client","CREATE_POST_MUTATION","GET_FEED_QUERY","CreatePost","createPost","error","onCompleted","writeQuery","id","post","user","firstName","lastName","onError","setPost","handlePost","variables","update","cache","data","readQuery","query","e","target","value"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,SANF,QAOO,mBAPP;AASA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,oBAAoB,GAAGH,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAMI,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAeA,MAAMK,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAA0BN,WAAW,CAACE,oBAAD,EAAuB;AAChEK,IAAAA,WAAW,CAAC;AAAEF,MAAAA;AAAF,KAAD,EAAiB;AAC1BJ,MAAAA,MAAM,CAACO,UAAP,CAAkB;AAChBC,QAAAA,EAAE,EAAEJ,UAAU,CAACI,EADC;AAEhBC,QAAAA,IAAI,EAAEL,UAAU,CAACI,EAFD;AAGhBE,QAAAA,IAAI,EAAE;AACJC,UAAAA,SAAS,EAAEP,UAAU,CAACM,IAAX,CAAgBC,SADvB;AAEJC,UAAAA,QAAQ,EAAER,UAAU,CAACM,IAAX,CAAgBE;AAFtB;AAHU,OAAlB;AAQD,KAV+D;;AAWhEC,IAAAA,OAAO,CAAC;AAAER,MAAAA;AAAF,KAAD,EAAY,CAAE;;AAX2C,GAAvB,CAA3C;AAaA,QAAM,CAACI,IAAD,EAAOK,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASkB,UAAT,GAAsB;AACpBX,IAAAA,UAAU,CAAC;AACTY,MAAAA,SAAS,EAAE;AAAEP,QAAAA,IAAI,EAAEA;AAAR,OADF;AAETQ,MAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEf,UAAAA;AAAF;AAAR,OAAR,KAAqC;AAC3C,cAAMe,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAACC,UAAAA,KAAK,EAAGnB;AAAT,SAAhB,CAAb;AAED;AALQ,KAAD,CAAV;AAOD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,WAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,IAAI,EAAE,CAFR;AAGE,UAAA,OAAO,EAAE,EAHX;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,UAAU,EAAE,sBALd;AAME,UAAA,QAAQ,EAAGoB,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAN1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,cAAD;AAAA,+BACE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAA4C,YAAA,OAAO,EAAET,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAjDD;;GAAMZ,U;UAC4BJ,W;;;KAD5BI,U;AAmDN,eAAeA,UAAf","sourcesContent":["import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  TextField,\n} from \"@material-ui/core\"\n\nimport { useState } from \"react\"\nimport { gql, useMutation } from \"@apollo/client\"\nimport client from \"../apollo.js\"\n\nconst CREATE_POST_MUTATION = gql`\n  mutation CreatePost($post: String!) {\n    createPost(post: $post) {\n      id\n      post\n      user {\n        firstName\n        lastName\n      }\n    }\n  }\n`\nconst GET_FEED_QUERY = gql`\n  query {\n    getFeed {\n      id\n      post\n      user {\n        id\n        firstName\n        lastName\n      }\n    }\n  }\n`\n\n\nconst CreatePost = () => {\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    onCompleted({ createPost }) {\n      client.writeQuery({\n        id: createPost.id,\n        post: createPost.id,\n        user: {\n          firstName: createPost.user.firstName,\n          lastName: createPost.user.lastName,\n        },\n      })\n    },\n    onError({ error }) {},\n  })\n  const [post, setPost] = useState(\"\")\n\n  function handlePost() {\n    createPost({\n      variables: { post: post },\n      update: (cache, { data: { createPost } }) => {\n        const data = cache.readQuery({query:  GET_FEED_QUERY})\n        \n      },\n    })\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <TextField\n            multiline\n            rows={2}\n            rowsMax={12}\n            fullWidth\n            helperText={\"What's on your mind?\"}\n            onChange={(e) => setPost(e.target.value)}\n          />\n        </CardContent>\n        <CardActionArea>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={handlePost}>\n              Post\n            </Button>\n          </CardActions>\n        </CardActionArea>\n      </Card>\n    </div>\n  )\n}\n\nexport default CreatePost\n"]},"metadata":{},"sourceType":"module"}