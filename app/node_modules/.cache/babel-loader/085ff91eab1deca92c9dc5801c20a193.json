{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Programming/Apps/social/app/src/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { login as authLogin } from \"../utils/authentication.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(8)\n  },\n  title: {\n    marginBottom: theme.spacing(2)\n  },\n  formInput: {\n    width: \"100%\"\n  }\n}));\nconst LOGIN_MUTATION = gql`\n  mutation Login($email: String, $password: String) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [login, {\n    loading,\n    error\n  }] = useMutation(LOGIN_MUTATION, {\n    onCompleted({\n      login\n    }) {\n      if (login) {\n        authLogin(login.token);\n      }\n    },\n\n    onError({\n      error\n    }) {}\n\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  function handleLogin() {\n    login({\n      variables: {\n        email: email,\n        password: password\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      component: \"h1\",\n      variant: \"h5\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.formInput,\n                fullWidth: true,\n                label: \"Email\",\n                name: \"email\",\n                size: \"small\",\n                variant: \"outlined\",\n                error: emailError !== \"\",\n                helperText: emailError,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Password\",\n                name: \"password\",\n                size: \"small\",\n                type: \"password\",\n                variant: \"outlined\",\n                error: passwordError !== \"\",\n                helperText: passwordError,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            variant: \"contained\",\n            onClick: () => handleLogin(),\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: [error.graphQLErrors.map(({\n              message\n            }) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 26\n              }, this);\n            }), error.networkError ? \"Sorry, we are uanble to complete the request at this time.\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"hdOs0rKmW21SvrBI57H7Tc/Vixc=\", false, function () {\n  return [useStyles, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adam/Programming/Apps/social/app/src/login/Login.js"],"names":["Button","Container","Grid","makeStyles","TextField","Typography","Alert","useState","gql","useMutation","login","authLogin","useStyles","theme","container","marginTop","spacing","title","marginBottom","formInput","width","LOGIN_MUTATION","Login","classes","loading","error","onCompleted","token","onError","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","handleLogin","variables","e","target","value","graphQLErrors","map","message","networkError"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { useState } from \"react\"\nimport { gql, useMutation } from \"@apollo/client\"\nimport { login as authLogin } from \"../utils/authentication.js\"\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(8),\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n  },\n  formInput: {\n    width: \"100%\",\n  },\n}))\n\nconst LOGIN_MUTATION = gql`\n  mutation Login($email: String, $password: String) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n      }\n    }\n  }\n`\n\nconst Login = () => {\n  const classes = useStyles()\n  const [login, { loading, error }] = useMutation(LOGIN_MUTATION, {\n    onCompleted({ login }) {\n      if (login) {\n        authLogin(login.token)\n      }\n    },\n    onError({ error }) {},\n  })\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [emailError, setEmailError] = useState(\"\")\n  const [passwordError, setPasswordError] = useState(\"\")\n\n  function handleLogin() {\n    login({\n      variables: { email: email, password: password },\n    })\n  }\n\n  return (\n    <Container className={classes.container} maxWidth=\"xs\">\n      <Typography className={classes.title} component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <form>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.formInput}\n                  fullWidth\n                  label=\"Email\"\n                  name=\"email\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  error={emailError !== \"\"}\n                  helperText={emailError}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  name=\"password\"\n                  size=\"small\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  error={passwordError !== \"\"}\n                  helperText={passwordError}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              onClick={() => handleLogin()}\n            >\n              Log in\n            </Button>\n          </Grid>\n          {error ? (\n            <Grid item xs={12}>\n              <Alert severity=\"error\">\n                {error.graphQLErrors.map(({ message }) => {\n                  return <span>{message}</span>\n                })}\n                {error.networkError\n                  ? \"Sorry, we are uanble to complete the request at this time.\"\n                  : \"\"}\n              </Alert>\n            </Grid>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n      </form>\n    </Container>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}