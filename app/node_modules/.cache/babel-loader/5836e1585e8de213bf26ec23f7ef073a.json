{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Programming/Apps/social/app/src/utils/authentication.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n/**\n * This file is used for authentication related functions/constants.\n * @author Adam Rodrigues\n * @see AuthetnicatedRoute\n * https://stackoverflow.com/questions/43164554/how-to-implement-authenticated-routes-in-react-router-4\n */\n\n/**\n * The auth token identifier in the local storage\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AUTH_TOKEN = \"auth-token\";\n/**\n * Checks if the authentication token is set\n */\n\nfunction isAuthenticated() {\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return token != null;\n}\n/**\n * Performs the authentication login task by setting the authentication tokens value.\n * @param {string} token\n */\n\n\nfunction login(token) {\n  localStorage.setItem(AUTH_TOKEN, token);\n  window.location.reload(false);\n}\n/**\n * Logs the user out by removing the authentication token.\n */\n\n\nfunction logout() {\n  localStorage.removeItem(AUTH_TOKEN);\n  window.location.reload(false);\n}\n/**\n * Authenticates a route.\n * @param {Component} param\n */\n\n\nfunction AuthenticatedRoute({\n  component: Component,\n  authed,\n  redirectPath = \"/login\",\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authed === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: redirectPath,\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AuthenticatedRoute;\nexport { isAuthenticated, logout, login, AuthenticatedRoute };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["/Users/adam/Programming/Apps/social/app/src/utils/authentication.js"],"names":["React","Route","Redirect","AUTH_TOKEN","isAuthenticated","token","localStorage","getItem","login","setItem","window","location","reload","logout","removeItem","AuthenticatedRoute","component","Component","authed","redirectPath","rest","props","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP;AACA;AACA;;AACA,SAASC,eAAT,GAA2B;AACzB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,UAArB,CAAd;AACA,SAAOE,KAAK,IAAI,IAAhB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,KAAT,CAAeH,KAAf,EAAsB;AACpBC,EAAAA,YAAY,CAACG,OAAb,CAAqBN,UAArB,EAAiCE,KAAjC;AACAK,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;AAED;AACA;AACA;;;AACA,SAASC,MAAT,GAAkB;AAChBP,EAAAA,YAAY,CAACQ,UAAb,CAAwBX,UAAxB;AACAO,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,kBAAT,CAA4B;AAC1BC,EAAAA,SAAS,EAAEC,SADe;AAE1BC,EAAAA,MAF0B;AAG1BC,EAAAA,YAAY,GAAG,QAHW;AAI1B,KAAGC;AAJuB,CAA5B,EAKG;AACD,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNH,MAAM,KAAK,IAAX,gBACE,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAEH,YADR;AAEFI,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACV;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAvBQI,kB;AAyBT,SAASX,eAAT,EAA0BS,MAA1B,EAAkCL,KAAlC,EAAyCO,kBAAzC","sourcesContent":["import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\n/**\n * This file is used for authentication related functions/constants.\n * @author Adam Rodrigues\n * @see AuthetnicatedRoute\n * https://stackoverflow.com/questions/43164554/how-to-implement-authenticated-routes-in-react-router-4\n */\n\n/**\n * The auth token identifier in the local storage\n */\nexport const AUTH_TOKEN = \"auth-token\"\n\n/**\n * Checks if the authentication token is set\n */\nfunction isAuthenticated() {\n  const token = localStorage.getItem(AUTH_TOKEN)\n  return token != null\n}\n\n/**\n * Performs the authentication login task by setting the authentication tokens value.\n * @param {string} token\n */\nfunction login(token) {\n  localStorage.setItem(AUTH_TOKEN, token)\n  window.location.reload(false)\n}\n\n/**\n * Logs the user out by removing the authentication token.\n */\nfunction logout() {\n  localStorage.removeItem(AUTH_TOKEN)\n  window.location.reload(false)\n}\n\n/**\n * Authenticates a route.\n * @param {Component} param\n */\nfunction AuthenticatedRoute({\n  component: Component,\n  authed,\n  redirectPath = \"/login\",\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authed === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: redirectPath,\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport { isAuthenticated, logout, login, AuthenticatedRoute }\n"]},"metadata":{},"sourceType":"module"}